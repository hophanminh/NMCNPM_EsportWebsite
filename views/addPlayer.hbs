{{#section 'css'}}
<link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/css/fileinput.min.css" media="all"
    rel="stylesheet" type="text/css" />
{{/section}}

{{#section 'js'}}
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
<script
    src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.min.js"></script>
<script>
    $('#dob').datetimepicker({
        // format: 'd/m/Y H:i'
        format: 'd/m/Y',
        timepicker: false,
        mask: true,
    });
</script>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

{{!-- <script>
    var fileInput = document.getElementById('txtFile');
    var fileDisplayArea = document.getElementById('fileDisplayArea');

    fileInput.addEventListener('change', function(e) {
    var file = fileInput.files[0];
    var textType = /text.*/;
    
    if (file.type.match(textType)) {
        var reader = new FileReader();
        
        reader.onload = function(e) {
            var content = reader.result;
            //Here the content has been read successfuly
            alert(content);
           
        reader.readAsText(file);	
    } else {
        fileDisplayArea.innerText = "File not supported!"
    }
});
</script> --}}
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/js/fileinput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/themes/fa/theme.min.js"></script>
<script>
    $('#img').fileinput({
        maxFileCount: 10,
        theme: 'fa',
        dropZoneEnabled: false,
        allowedFileExtensions: ['png', 'jpg', 'gif'],
        removeClass: "btn btn-danger",
    });
</script>
{{/section}}

<div class="container text-white">
    <div class="h1 text-white d-flex justify-content-center mb-3">
        Player Detail
    </div>
    <form method="POST" class="needs-validation" novalidate>
        <div class="form-row">
            <div class="col mb-3">
                <label for="usernamePlayer">Usesrname Player</label>
                <input type="text" class="form-control" id="usernamePlayer" name="usernamePlayer" required>
            </div>
            <div class="col mb-3">
                <label for="realnamePlayer">Real name player</label>
                <input type="text" class="form-control" id="realnamePlayer" name="realnamePlayer" required>
            </div>
        </div>
        <div class="form-row">
            <div class="col-6 mb-3">
                <label for="dob">Date of birth</label>
                <input class="form-control" id="dob" name='dob' required>
            </div>
            <div class="col-md-3 mb-3">
                <label for="tournament_idTournament">ID tournament join</label>
                <input type="text" class="form-control" id="tournament_idTournament" name="tournament_idTournament"
                    value="{{this.idTournament}}" readonly>
            </div>
        </div>
        <div class="card">
            <h4 class="card-header">
                Upload
            </h4>
            <div class="card-body">
                <div class="form-group">
                    <div class="file-loading">
                        <input id="img" name="img" type="file" multiple>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" required>
                <label class="form-check-label">
                    Agree to terms and conditions
                </label>
            </div>
        </div>
        <button class="btn btn-primary" type="submit" formaction="/player/{{this.idTournament}}/addPlayer">
            <i class="fa fa-plus" aria-hidden="true"></i>
            Add
        </button>
    </form>
    <hr>
    <form method="post" id="fileform" enctype="multipart/form-data">
        <div class="form-group">
            <label for="txtFile">Using file</label>
            <input type="file" class="form-control-file" id="txtFile" name="txtFile">
        </div>
        <button class= "btn btn-outline-warning" type="submit" formaction="/player/{{this.idTournament}}/addPlayerFile">
            Submit
        </button>
    </form>
</div>